name: Flutterfire Continuous Deployment

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - /pubspec.yaml
  pull_request:
    branches: [ main ]
    paths:
      - /pubspec.yaml

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        name: Set up the repo files
      - uses: subosito/flutter-action@v1
        name: Set up flutter
        with:
            flutter-version: '2.0.3'
      - run: flutter pub get
        name: Get flutter packages from pubspec.yaml
      - run: flutter build apk
        name: Build apk (android) version of the app
      - uses: w9jds/firebase-action@master
        name: Set up the firebase CLI tool
        env:
          FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
        with: 
          args: appdistribution:distribute "build/app/outputs/flutter-apk/app-release.apk" --app 1:113842149906:android:67d8ced2378cce6e6d96cb --token "$FIREBASE_TOKEN" --release-notes-file "release-notes.txt" --groups "devs"